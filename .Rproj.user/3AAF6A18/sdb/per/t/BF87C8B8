{
    "collab_server" : "",
    "contents" : "# Sat Mar 18 16:03:04 2017 ------------------------------\n# Create datasets of reported cases and biths and # later population\n# Use predict to expand on births #Might not be so neccesary\n#----\n\nlibrary(pomp)\nrequire(locpol)\nlibrary(plyr)\nlibrary(reshape2)\nlibrary(magrittr)\nlibrary(ggplot2)\nlibrary(foreach)\nlibrary(doParallel)\n\nregisterDoParallel()\n# Sat Mar 18 18:27:08 2017 ------------------------------\n\n\"creating City datasets\"\n\nstew(\"TSIR_POMP_SRA_DATA\",{\n  \n  Biweekly=function(Data){\n    n=nrow(Data)/2\n    m=ncol(Data) \n    mat = matrix( ,n,m)\n    for (i in 0:n - 1 ){\n      mat[i + 1,]= rep(0, m)\n      for (j in 1:2) {\n        x = (2*i)+j\n        mat[i+1,] = c(mat[i+1,]) + c(Data[x,])\n      }\n    }\n    return(mat)\n  }\n  \n  Cumulative = function(Data){\n    n=nrow(Data)\n    m=ncol(Data)\n    Dta=matrix( ,n,m)\n    Dta[1,] = Data[1,]\n    for (i in 2:n){\n      Dta[i,] = Dta[i-1,] + Data[i,]\n    }\n    \n    return(Dta)\n  }\n  \n  \n  \n  SSE2 = function(h){\n    ESS = 0\n    d <- data.frame(X = NewData2$CIncidence)\n    d$Y <- NewData2$CBirths\n    sd = sqrt(var(d$X))\n    fit <- lm(CBirths ~ CIncidence, data=NewData2)\n    lpest1 <- locPolSmootherC(d$X,d$Y , d$X, bw = h * sd, deg = 1, gaussK)\n    lpest2 <- locpol(Y ~ X, data = d, bw = h * sd , kernel = gaussK, deg = 1, xeval = d$X)\n    ESS = sum(lpest2$residuals^2)\n    error = fitted.values(fit) - ( lpest1$beta0 + lpest2$lpFit$Y1 * lpest2$lpFit[,1])\n    ESS1 = sum(error^2)\n    return(c(ESS/1e+12,ESS1/1e+15))\n  }\n  \n  \n  \"Loading dataset\"\n  load(\"~/GitHub/Measles/twentycities.rda\")\n  demog$town = factor(demog$town)\n  measles$town = factor(measles$town)\n  \n  \n  \n  for (names in levels(measles$town)) {\n    tmp <- subset(measles, town == names)\n    tmp %>% \n      dcast(date~\"cases\", fun.aggregate = sum) %>%\n      mutate(year=as.integer(format(date,\"%Y\"))) %>%\n      subset(year>=1944 & year<1965) %>%\n      mutate(time=(julian(date,origin=as.Date(\"1944-01-01\")))/365.25+1944) %>%\n      subset(time>1944 & time<1965, select=c(time,cases)) -> tmp\n    \n    ##################\n    tmp1<- subset(demog, town == names)\n    tmp1<-tmp1[,-1]\n    tmp1 %>% subset(year>=1944 & year<1964) %>% \n      summarize(\n        time= tmp$time, \n        birthrate=predict(smooth.spline(x=year+0.5,y=births),x=time-4)$y\n      ) -> covar\n    merge(tmp,covar, by = \"time\")->x\n    \n    NewData<- as.matrix(x)\n    Fdat = Biweekly(NewData)# Biweekly data\n    Fdat.d = cbind(Fdat[-(1:8),2],Fdat[1:539,3]) # Adjusting for the  delay caused by maternal immunity\n    Fdat1 = Cumulative(Fdat.d)\n    NewData1 = cbind(Time=seq(from = 1944, to= 1964.983, length.out = length(Fdat1)),CIncidence=Fdat1[,1],CBirths=Fdat1[,2])\n    NewData2 = as.data.frame(NewData1)\n    \n    h = seq(.05,5,.005)\n    y = sapply(h,SSE2)\n    h = h[abs(unlist(y[2,]-y[1,]))==min(abs(unlist(y[2,]-y[1,])))]\n    \n    d <- data.frame(X = NewData2$CIncidence)\n    d$Y <- NewData2$CBirths\n    plot(d$X,d$Y)\n    sd = sqrt(var(d$X))\n    lpest1 <- locPolSmootherC(d$X,d$Y , d$X, bw = h * sd , deg = 1, gaussK)\n    lpest2 <- locpol(Y ~ X, data = d, bw = h * sd , kernel = gaussK, deg = 1, xeval = d$X)\n    \n    data.frame(Time = NewData2[[\"Time\"]], beta1=lpest1[[\"beta1\"]],residuals=lpest2[[\"residuals\"]])->result\n    \n    assign( paste0(names,\"_SRA\"),result)\n    \n  }\n  \n})\n\n\n###################################################################\n\n\n\n\n\n###############################################################################################\n##########################    DATA      CREATED    ############################################\n###############################################################################################\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "created" : 1490103701686.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1957422776",
    "id" : "BF87C8B8",
    "lastKnownWriteTime" : 1490105476,
    "last_content_update" : 1490105476411,
    "path" : "~/GitHub/TSIR_POMP/TSIR_POMP.R",
    "project_path" : "TSIR_POMP.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}